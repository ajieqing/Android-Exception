The exception description:

io.realm.exceptions.RealmError: Unrecoverable error. ftruncate() failed: Interrupted system call in /Users/cm/Realm/realm-java/realm/realm-library/src/main/cpp/io_realm_internal_OsSharedRealm.cpp line 101
    at io.realm.internal.OsSharedRealm.nativeGetSharedRealm(Native Method)
    at io.realm.internal.OsSharedRealm.<init>(OsSharedRealm.java:171)
    at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:241)
    at io.realm.internal.OsSharedRealm.getInstance(OsSharedRealm.java:231)
    at io.realm.RealmCache.b(RealmCache.java:319)
    at io.realm.RealmCache.a(RealmCache.java:282)
    at io.realm.r.l(Realm.java:354)
    at com.baiiwang.smsprivatebox.utils.ai.a(RealmUtil.java:108)
    at com.baiiwang.smsprivatebox.g.c.a(MessagesDataWarpper.java:704)
    at com.baiiwang.smsprivatebox.g.c.b(MessagesDataWarpper.java:310)
    at com.baiiwang.smsprivatebox.receiver.SMSSendResult.a(SMSSendResult.java:27)
    at com.klinker.android.send_message.StatusUpdatedReceiver$1.run(StatusUpdatedReceiver.java:24)
    at java.lang.Thread.run(Thread.java:818)


Source code:


private OsSharedRealm(OsRealmConfig osRealmConfig) {
        Capabilities capabilities = new AndroidCapabilities();
        RealmNotifier realmNotifier = new AndroidRealmNotifier(this, capabilities);

        // SharedRealms under constructions are identified by the Context.
        this.context = osRealmConfig.getContext();
        sharedRealmsUnderConstruction.add(this);
        try {
            this.nativePtr = nativeGetSharedRealm(osRealmConfig.getNativePtr(), realmNotifier);
        } catch (Throwable t) {
            // The SharedRealm instances have to be closed before throw.
            for (OsSharedRealm sharedRealm: tempSharedRealmsForCallback) {
                if (!sharedRealm.isClosed()) {
                    sharedRealm.close();
                }
            }
            throw t;
        } finally {
            tempSharedRealmsForCallback.clear();
            sharedRealmsUnderConstruction.remove(this);
        }
        this.osRealmConfig = osRealmConfig;
        this.schemaInfo = new OsSchemaInfo(nativeGetSchemaInfo(nativePtr), this);
        this.context.addReference(this);

        this.capabilities = capabilities;
        this.realmNotifier = realmNotifier;
        nativeSetAutoRefresh(nativePtr, capabilities.canDeliverNotification());
    }


Function nativeGetSharedRealm maybe throw a throwable£¬so calling the function Realm.getDefaultInstance() must	catch exception.
